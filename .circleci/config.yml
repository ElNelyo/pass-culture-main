version: 2.0

jobs:
  build:
    machine:
      image: circleci/classic:latest
    working_directory: ~/
    steps: # a collection of executable commands
      - run:
          name: Init env
          command: |
            git clone https://github.com/betagouv/pass-culture-main.git
            cd pass-culture-main
            git clone https://github.com/betagouv/pass-culture-api.git api
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get install yarn
      - checkout:
          path: ~/pass-culture-main/pro
      - run:
          name: Running API server
          command: |
            cd ~/pass-culture-main
            ls -al api/
            ls -al pro/
            docker-compose up
          background: true
      - run:
          name: Run Frontend
          command: |
            cd ~/pass-culture-main/pro
            yarn install && yarn start
      - run:
          name: Running tests
          command:
            cd ~/pass-culture-main/pro
            sleep 60
            yarn testcafe

#jobs
#  build-api:
#    working_directory: ~/pass-culture-api # directory where steps will run
#    docker: # run the steps with Docker
#      - image: circleci/python:3.6.1 # ...with this image as the primary container; this is where all `steps` will run
#        environment: # environment variables for database
#          POSTGRES_USER: pass_culture_user
#          POSTGRES_PASSWORD: pass_culture_pass
#          POSTGRES_DB: pass_culture
#          DATABASE_URL: postgresql://pass_culture_user:pass_culture_pass@localhost:5432/pass_culture
#          MAILJET_API_KEY: $MAILJET_API_KEY
#          MAILJET_API_SECRET: $MAILJET_API_SECRET
#      - image: circleci/postgres:9.6.2 # database image for service container available at `localhost:<port>`
#        environment: # environment variables for database
#          POSTGRES_USER: pass_culture_user
#          POSTGRES_PASSWORD: pass_culture_pass
#          POSTGRES_DB: pass_culture
#      - image: circleci/node:8.11.3-browsers
#    steps: # a collection of executable commands
#      - run:
#          name: Test commands
#          command: |
#            ip -a
#
#      - run:
#          name: Clone API Repo
#          command:  |
#            cd ~
#            git clone https://github.com/betagouv/pass-culture-api.git
##      - restore_cache: # restores saved dependency cache if the Branch key template or requirements.txt files have not changed since the previous run
##          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
##      - run: # install and activate virtual environment with pip
##          command: |
##            python3 -m venv venv
##            . venv/bin/activate
##            pip install -r requirements.txt
##      - save_cache: # special step to save dependency cache
##          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
##          paths:
##            - "venv"
##      - run:
##          name: Running API
##          command: |
##            gpg --passphrase $PASS_PRIVATE --batch --output private.tar.gz -d private.tar.gz.gpg
##            tar xf private.tar.gz
##            . venv/bin/activate
##            python app.py
#
#  build-app:
#    docker:
#      # specify the version you desire here
#      - image: circleci/node:8.11.3-browsers
#    working_directory: ~/repo
#
#    steps:
#      - checkout
#
#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "package.json" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-
#
#      - run: yarn install
#
#      - save_cache:
#          paths:
#            - node_modules
#          key: v1-dependencies-{{ checksum "package.json" }}
#
#      # Start server for testcafe
#      - run:
#          name: Running Webapp
#          command:
#            yarn start
#
##      # run functional tests!
##      - run:
##          name: Running tests
##          command:
##            yarn testcafe
#
#  test:
#    docker:
#      # specify the version you desire here
#      - image: circleci/node:8.11.3-browsers
#    working_directory: ~/repo
#
#    steps:
#      - checkout
#
#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "package.json" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-
#
#      # run functional tests!
#      # sleep to wait for api to be up
#      - run:
#          name: Running tests
#          command: |
#            sleep 120
#            yarn testcafe
#
#workflows:
#  version: 2
#  build-api-and-build-app:
#    jobs:
#      - build-api
##      - build-app
##      - test:
##          requires:
##            - build-api
##            - build-app

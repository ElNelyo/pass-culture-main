// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | search | FilterByKeyword snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterByKeyword
    pagination={
      Object {
        "windowQuery": Object {
          "categories": null,
          "date": null,
          "distance": null,
          "jours": null,
          "latitude": null,
          "longitude": null,
          "mots-cles": null,
          "orderBy": "offer.id+desc",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="flex-columns items-start"
      >
        <div
          className="field has-addons flex-columns flex-1"
          id="search-page-keywords-field"
        >
          <p
            className="control has-icons-right flex-1"
          >
            <input
              className="input search-input"
              defaultValue={null}
              id="keywords"
              onChange={[Function]}
              placeholder="Un mot-clé"
              type="text"
            />
          </p>
          <div
            className="control flex-0"
          >
            <button
              className="button is-rounded is-medium"
              disabled={true}
              id="keywords-search-button"
              type="submit"
            >
              Chercher
            </button>
          </div>
        </div>
      </div>,
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="field has-addons flex-columns flex-1"
          id="search-page-keywords-field"
        >
          <p
            className="control has-icons-right flex-1"
          >
            <input
              className="input search-input"
              defaultValue={null}
              id="keywords"
              onChange={[Function]}
              placeholder="Un mot-clé"
              type="text"
            />
          </p>
          <div
            className="control flex-0"
          >
            <button
              className="button is-rounded is-medium"
              disabled={true}
              id="keywords-search-button"
              type="submit"
            >
              Chercher
            </button>
          </div>
        </div>,
        "className": "flex-columns items-start",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="control has-icons-right flex-1"
            >
              <input
                className="input search-input"
                defaultValue={null}
                id="keywords"
                onChange={[Function]}
                placeholder="Un mot-clé"
                type="text"
              />
            </p>,
            <div
              className="control flex-0"
            >
              <button
                className="button is-rounded is-medium"
                disabled={true}
                id="keywords-search-button"
                type="submit"
              >
                Chercher
              </button>
            </div>,
          ],
          "className": "field has-addons flex-columns flex-1",
          "id": "search-page-keywords-field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <input
                  className="input search-input"
                  defaultValue={null}
                  id="keywords"
                  onChange={[Function]}
                  placeholder="Un mot-clé"
                  type="text"
                />,
                false,
              ],
              "className": "control has-icons-right flex-1",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "input search-input",
                  "defaultValue": null,
                  "id": "keywords",
                  "onChange": [Function],
                  "placeholder": "Un mot-clé",
                  "type": "text",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              false,
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="button is-rounded is-medium"
                disabled={true}
                id="keywords-search-button"
                type="submit"
              >
                Chercher
              </button>,
              "className": "control flex-0",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Chercher",
                "className": "button is-rounded is-medium",
                "disabled": true,
                "id": "keywords-search-button",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Chercher",
              "type": "button",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="flex-columns items-start"
        >
          <div
            className="field has-addons flex-columns flex-1"
            id="search-page-keywords-field"
          >
            <p
              className="control has-icons-right flex-1"
            >
              <input
                className="input search-input"
                defaultValue={null}
                id="keywords"
                onChange={[Function]}
                placeholder="Un mot-clé"
                type="text"
              />
            </p>
            <div
              className="control flex-0"
            >
              <button
                className="button is-rounded is-medium"
                disabled={true}
                id="keywords-search-button"
                type="submit"
              >
                Chercher
              </button>
            </div>
          </div>
        </div>,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="field has-addons flex-columns flex-1"
            id="search-page-keywords-field"
          >
            <p
              className="control has-icons-right flex-1"
            >
              <input
                className="input search-input"
                defaultValue={null}
                id="keywords"
                onChange={[Function]}
                placeholder="Un mot-clé"
                type="text"
              />
            </p>
            <div
              className="control flex-0"
            >
              <button
                className="button is-rounded is-medium"
                disabled={true}
                id="keywords-search-button"
                type="submit"
              >
                Chercher
              </button>
            </div>
          </div>,
          "className": "flex-columns items-start",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="control has-icons-right flex-1"
              >
                <input
                  className="input search-input"
                  defaultValue={null}
                  id="keywords"
                  onChange={[Function]}
                  placeholder="Un mot-clé"
                  type="text"
                />
              </p>,
              <div
                className="control flex-0"
              >
                <button
                  className="button is-rounded is-medium"
                  disabled={true}
                  id="keywords-search-button"
                  type="submit"
                >
                  Chercher
                </button>
              </div>,
            ],
            "className": "field has-addons flex-columns flex-1",
            "id": "search-page-keywords-field",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    className="input search-input"
                    defaultValue={null}
                    id="keywords"
                    onChange={[Function]}
                    placeholder="Un mot-clé"
                    type="text"
                  />,
                  false,
                ],
                "className": "control has-icons-right flex-1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "input search-input",
                    "defaultValue": null,
                    "id": "keywords",
                    "onChange": [Function],
                    "placeholder": "Un mot-clé",
                    "type": "text",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                false,
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <button
                  className="button is-rounded is-medium"
                  disabled={true}
                  id="keywords-search-button"
                  type="submit"
                >
                  Chercher
                </button>,
                "className": "control flex-0",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Chercher",
                  "className": "button is-rounded is-medium",
                  "disabled": true,
                  "id": "keywords-search-button",
                  "type": "submit",
                },
                "ref": null,
                "rendered": "Chercher",
                "type": "button",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;

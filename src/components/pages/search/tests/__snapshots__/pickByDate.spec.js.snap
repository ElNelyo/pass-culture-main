// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`src | components | pages | search | PickByDate snapshot should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PickByDate
    dateFormat=""
    filterDate={[MockFunction]}
    highlightedDates=""
    id=""
    maxDate=""
    minDate=""
    size=""
    value=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span>
          <DatePicker
            allowSameDay={false}
            className="date"
            dateFormat=""
            dateFormatCalendar="MMMM YYYY"
            disabled={false}
            disabledKeyboardNavigation={false}
            dropdownMode="scroll"
            filterDate={[MockFunction]}
            highlightDates={Array []}
            id=""
            maxDate=""
            minDate=""
            monthsShown={1}
            nextMonthButtonLabel="Next month"
            onBlur={[Function]}
            onChange={[Function]}
            onClickOutside={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onMonthChange={[Function]}
            onSelect={[Function]}
            onYearChange={[Function]}
            preventOpenOnFocus={false}
            previousMonthButtonLabel="Previous Month"
            readOnly={false}
            selected={null}
            shouldCloseOnSelect={true}
            showTimeSelect={false}
            timeCaption="Time"
            timeIntervals={30}
            withPortal={false}
          />
        </span>,
        <span
          className="icon"
        >
          <Icon
            alt="Horaires"
            className="input-icon"
            svg="ico-calendar"
          />
        </span>,
      ],
      "className": "input is- date-picker",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <DatePicker
            allowSameDay={false}
            className="date"
            dateFormat=""
            dateFormatCalendar="MMMM YYYY"
            disabled={false}
            disabledKeyboardNavigation={false}
            dropdownMode="scroll"
            filterDate={[MockFunction]}
            highlightDates={Array []}
            id=""
            maxDate=""
            minDate=""
            monthsShown={1}
            nextMonthButtonLabel="Next month"
            onBlur={[Function]}
            onChange={[Function]}
            onClickOutside={[Function]}
            onFocus={[Function]}
            onKeyDown={[Function]}
            onMonthChange={[Function]}
            onSelect={[Function]}
            onYearChange={[Function]}
            preventOpenOnFocus={false}
            previousMonthButtonLabel="Previous Month"
            readOnly={false}
            selected={null}
            shouldCloseOnSelect={true}
            showTimeSelect={false}
            timeCaption="Time"
            timeIntervals={30}
            withPortal={false}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowSameDay": false,
            "className": "date",
            "dateFormat": "",
            "dateFormatCalendar": "MMMM YYYY",
            "disabled": false,
            "disabledKeyboardNavigation": false,
            "dropdownMode": "scroll",
            "filterDate": [MockFunction],
            "highlightDates": Array [],
            "id": "",
            "maxDate": "",
            "minDate": "",
            "monthsShown": 1,
            "nextMonthButtonLabel": "Next month",
            "onBlur": [Function],
            "onChange": [Function],
            "onClickOutside": [Function],
            "onFocus": [Function],
            "onKeyDown": [Function],
            "onMonthChange": [Function],
            "onSelect": [Function],
            "onYearChange": [Function],
            "preventOpenOnFocus": false,
            "previousMonthButtonLabel": "Previous Month",
            "readOnly": false,
            "selected": null,
            "shouldCloseOnSelect": true,
            "showTimeSelect": false,
            "timeCaption": "Time",
            "timeIntervals": 30,
            "withPortal": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Icon
            alt="Horaires"
            className="input-icon"
            svg="ico-calendar"
          />,
          "className": "icon",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "alt": "Horaires",
            "className": "input-icon",
            "svg": "ico-calendar",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "span",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span>
            <DatePicker
              allowSameDay={false}
              className="date"
              dateFormat=""
              dateFormatCalendar="MMMM YYYY"
              disabled={false}
              disabledKeyboardNavigation={false}
              dropdownMode="scroll"
              filterDate={[MockFunction]}
              highlightDates={Array []}
              id=""
              maxDate=""
              minDate=""
              monthsShown={1}
              nextMonthButtonLabel="Next month"
              onBlur={[Function]}
              onChange={[Function]}
              onClickOutside={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMonthChange={[Function]}
              onSelect={[Function]}
              onYearChange={[Function]}
              preventOpenOnFocus={false}
              previousMonthButtonLabel="Previous Month"
              readOnly={false}
              selected={null}
              shouldCloseOnSelect={true}
              showTimeSelect={false}
              timeCaption="Time"
              timeIntervals={30}
              withPortal={false}
            />
          </span>,
          <span
            className="icon"
          >
            <Icon
              alt="Horaires"
              className="input-icon"
              svg="ico-calendar"
            />
          </span>,
        ],
        "className": "input is- date-picker",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <DatePicker
              allowSameDay={false}
              className="date"
              dateFormat=""
              dateFormatCalendar="MMMM YYYY"
              disabled={false}
              disabledKeyboardNavigation={false}
              dropdownMode="scroll"
              filterDate={[MockFunction]}
              highlightDates={Array []}
              id=""
              maxDate=""
              minDate=""
              monthsShown={1}
              nextMonthButtonLabel="Next month"
              onBlur={[Function]}
              onChange={[Function]}
              onClickOutside={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onMonthChange={[Function]}
              onSelect={[Function]}
              onYearChange={[Function]}
              preventOpenOnFocus={false}
              previousMonthButtonLabel="Previous Month"
              readOnly={false}
              selected={null}
              shouldCloseOnSelect={true}
              showTimeSelect={false}
              timeCaption="Time"
              timeIntervals={30}
              withPortal={false}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowSameDay": false,
              "className": "date",
              "dateFormat": "",
              "dateFormatCalendar": "MMMM YYYY",
              "disabled": false,
              "disabledKeyboardNavigation": false,
              "dropdownMode": "scroll",
              "filterDate": [MockFunction],
              "highlightDates": Array [],
              "id": "",
              "maxDate": "",
              "minDate": "",
              "monthsShown": 1,
              "nextMonthButtonLabel": "Next month",
              "onBlur": [Function],
              "onChange": [Function],
              "onClickOutside": [Function],
              "onFocus": [Function],
              "onKeyDown": [Function],
              "onMonthChange": [Function],
              "onSelect": [Function],
              "onYearChange": [Function],
              "preventOpenOnFocus": false,
              "previousMonthButtonLabel": "Previous Month",
              "readOnly": false,
              "selected": null,
              "shouldCloseOnSelect": true,
              "showTimeSelect": false,
              "timeCaption": "Time",
              "timeIntervals": 30,
              "withPortal": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Icon
              alt="Horaires"
              className="input-icon"
              svg="ico-calendar"
            />,
            "className": "icon",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "alt": "Horaires",
              "className": "input-icon",
              "svg": "ico-calendar",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "span",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
